diff --git a/colors/base16-eighties.vim b/colors/base16-eighties.vim
old mode 100644
new mode 100755
index 80e653d..7783358
--- a/colors/base16-eighties.vim
+++ b/colors/base16-eighties.vim
@@ -1,16 +1,6 @@
 " Base16 Eighties (https://github.com/chriskempson/base16)
 " Scheme: Chris Kempson (http://chriskempson.com)
 
-" This enables the coresponding base16-shell script to run so that
-" :colorscheme works in terminals supported by base16-shell scripts
-" User must set this variable in .vimrc
-"   let g:base16_shell_path=base16-builder/output/shell/
-if !has('gui_running')
-  if exists("g:base16_shell_path")
-    execute "silent !/bin/sh ".g:base16_shell_path."/base16-eighties.".&background.".sh"
-  endif
-endif
-
 " GUI color definitions
 let s:gui00 = "2d2d2d"
 let s:gui01 = "393939"
@@ -40,48 +30,44 @@ let s:cterm0B = "02"
 let s:cterm0C = "06"
 let s:cterm0D = "04"
 let s:cterm0E = "05"
-if exists('base16colorspace') && base16colorspace == "256"
-  let s:cterm01 = "18"
-  let s:cterm02 = "19"
-  let s:cterm04 = "20"
-  let s:cterm06 = "21"
-  let s:cterm09 = "16"
-  let s:cterm0F = "17"
-else
-  let s:cterm01 = "10"
-  let s:cterm02 = "11"
-  let s:cterm04 = "12"
-  let s:cterm06 = "13"
-  let s:cterm09 = "09"
-  let s:cterm0F = "14"
-endif
+let s:cterm01 = "10"
+let s:cterm02 = "11"
+let s:cterm04 = "12"
+let s:cterm06 = "13"
+let s:cterm09 = "09"
+let s:cterm0F = "14"
 
 " Theme setup
 hi clear
-syntax reset
+if exists("syntax_on")
+  syntax reset
+endif
 let g:colors_name = "base16-eighties"
 
 " Highlighting function
-fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)
+fun! s:HL(group, guifg, guibg, ctermfg, ctermbg, attr, guisp)
   if a:guifg != ""
-    exec "hi " . a:group . " guifg=#" . s:gui(a:guifg)
+    exec "hi! " . a:group . " guifg=#" . s:GUI(a:guifg)
   endif
   if a:guibg != ""
-    exec "hi " . a:group . " guibg=#" . s:gui(a:guibg)
+    exec "hi! " . a:group . " guibg=#" . s:GUI(a:guibg)
   endif
   if a:ctermfg != ""
-    exec "hi " . a:group . " ctermfg=" . s:cterm(a:ctermfg)
+    exec "hi! " . a:group . " ctermfg=" . s:CTERM(a:ctermfg)
   endif
   if a:ctermbg != ""
-    exec "hi " . a:group . " ctermbg=" . s:cterm(a:ctermbg)
+    exec "hi! " . a:group . " ctermbg=" . s:CTERM(a:ctermbg)
   endif
   if a:attr != ""
-    exec "hi " . a:group . " gui=" . a:attr . " cterm=" . a:attr
+    exec "hi! " . a:group . " gui=" . a:attr . " cterm=" . a:attr
+  endif
+  if a:guisp != ""
+    exec "hi! " . a:group . " guisp=#" . a:guisp
   endif
 endfun
 
 " Return GUI color for light/dark variants
-fun s:gui(color)
+fun! s:GUI(color)
   if &background == "dark"
     return a:color
   endif
@@ -108,7 +94,7 @@ fun s:gui(color)
 endfun
 
 " Return terminal color for light/dark variants
-fun s:cterm(color)
+fun! s:CTERM(color)
   if &background == "dark"
     return a:color
   endif
@@ -135,169 +121,197 @@ fun s:cterm(color)
 endfun
 
 " Vim editor colors
-call <sid>hi("Bold",          "", "", "", "", "bold")
-call <sid>hi("Debug",         s:gui08, "", s:cterm08, "", "")
-call <sid>hi("Directory",     s:gui0D, "", s:cterm0D, "", "")
-call <sid>hi("ErrorMsg",      s:gui08, s:gui00, s:cterm08, s:cterm00, "")
-call <sid>hi("Exception",     s:gui08, "", s:cterm08, "", "")
-call <sid>hi("FoldColumn",    "", s:gui01, "", s:cterm01, "")
-call <sid>hi("Folded",        s:gui03, s:gui01, s:cterm03, s:cterm01, "")
-call <sid>hi("IncSearch",     s:gui01, s:gui09, s:cterm01, s:cterm09, "none")
-call <sid>hi("Italic",        "", "", "", "", "none")
-call <sid>hi("Macro",         s:gui08, "", s:cterm08, "", "")
-call <sid>hi("MatchParen",    s:gui00, s:gui03, s:cterm00, s:cterm03,  "")
-call <sid>hi("ModeMsg",       s:gui0B, "", s:cterm0B, "", "")
-call <sid>hi("MoreMsg",       s:gui0B, "", s:cterm0B, "", "")
-call <sid>hi("Question",      s:gui0D, "", s:cterm0D, "", "")
-call <sid>hi("Search",        s:gui03, s:gui0A, s:cterm03, s:cterm0A,  "")
-call <sid>hi("SpecialKey",    s:gui03, "", s:cterm03, "", "")
-call <sid>hi("TooLong",       s:gui08, "", s:cterm08, "", "")
-call <sid>hi("Underlined",    s:gui08, "", s:cterm08, "", "")
-call <sid>hi("Visual",        "", s:gui02, "", s:cterm02, "")
-call <sid>hi("VisualNOS",     s:gui08, "", s:cterm08, "", "")
-call <sid>hi("WarningMsg",    s:gui08, "", s:cterm08, "", "")
-call <sid>hi("WildMenu",      s:gui08, "", s:cterm08, "", "")
-call <sid>hi("Title",         s:gui0D, "", s:cterm0D, "", "none")
-call <sid>hi("Conceal",       s:gui0D, s:gui00, s:cterm0D, s:cterm00, "")
-call <sid>hi("Cursor",        s:gui00, s:gui05, s:cterm00, s:cterm05, "")
-call <sid>hi("NonText",       s:gui03, "", s:cterm03, "", "")
-call <sid>hi("Normal",        s:gui05, s:gui00, s:cterm05, s:cterm00, "")
-call <sid>hi("LineNr",        s:gui03, s:gui01, s:cterm03, s:cterm01, "")
-call <sid>hi("SignColumn",    s:gui03, s:gui01, s:cterm03, s:cterm01, "")
-call <sid>hi("SpecialKey",    s:gui03, "", s:cterm03, "", "")
-call <sid>hi("StatusLine",    s:gui04, s:gui02, s:cterm04, s:cterm02, "none")
-call <sid>hi("StatusLineNC",  s:gui03, s:gui01, s:cterm03, s:cterm01, "none")
-call <sid>hi("VertSplit",     s:gui02, s:gui02, s:cterm02, s:cterm02, "none")
-call <sid>hi("ColorColumn",   "", s:gui01, "", s:cterm01, "none")
-call <sid>hi("CursorColumn",  "", s:gui01, "", s:cterm01, "none")
-call <sid>hi("CursorLine",    "", s:gui01, "", s:cterm01, "none")
-call <sid>hi("CursorLineNr",  s:gui03, s:gui01, s:cterm03, s:cterm01, "")
-call <sid>hi("PMenu",         s:gui04, s:gui01, s:cterm04, s:cterm01, "none")
-call <sid>hi("PMenuSel",      s:gui01, s:gui04, s:cterm01, s:cterm04, "")
-call <sid>hi("TabLine",       s:gui03, s:gui01, s:cterm03, s:cterm01, "none")
-call <sid>hi("TabLineFill",   s:gui03, s:gui01, s:cterm03, s:cterm01, "none")
-call <sid>hi("TabLineSel",    s:gui0B, s:gui01, s:cterm0B, s:cterm01, "none")
+call s:HL("Bold",          "", "", "", "", "bold", "")
+call s:HL("Debug",         s:gui08, "", s:cterm08, "", "", "")
+call s:HL("Directory",     s:gui0D, "", s:cterm0D, "", "", "")
+call s:HL("Error",         s:gui07, s:gui09, s:cterm07, s:cterm09, "", "")
+call s:HL("ErrorMsg",      s:gui08, s:gui00, s:cterm08, s:cterm00, "", "")
+call s:HL("Exception",     s:gui08, "", s:cterm08, "", "", "")
+call s:HL("FoldColumn",    s:gui0C, s:gui01, s:cterm0C, s:cterm01, "", "")
+call s:HL("Folded",        s:gui0F, s:gui01, s:cterm0F, s:cterm01, "", "")
+call s:HL("IncSearch",     s:gui01, s:gui09, s:cterm01, s:cterm09, "none", "")
+call s:HL("Italic",        "", "", "", "", "none", "")
+call s:HL("Macro",         s:gui08, "", s:cterm08, "", "", "")
+call s:HL("MatchParen",    s:gui00, s:gui03, s:cterm00, s:cterm03,  "", "")
+call s:HL("ModeMsg",       s:gui0B, "", s:cterm0B, "", "", "")
+call s:HL("MoreMsg",       s:gui0B, "", s:cterm0B, "", "", "")
+call s:HL("Question",      s:gui0D, "", s:cterm0D, "", "", "")
+call s:HL("Search",        s:gui03, s:gui0A, s:cterm03, s:cterm0A,  "", "")
+call s:HL("SpecialKey",    s:gui03, "", s:cterm03, "", "", "")
+call s:HL("TooLong",       s:gui08, "", s:cterm08, "", "", "")
+call s:HL("Underlined",    s:gui08, "", s:cterm08, "", "", "")
+call s:HL("Visual",        "", s:gui02, "", s:cterm02, "", "")
+call s:HL("VisualNOS",     s:gui08, "", s:cterm08, "", "", "")
+call s:HL("WarningMsg",    s:gui0A, "", s:cterm0A, "", "", "")
+call s:HL("WildMenu",      s:gui08, s:gui0A, s:cterm08, "", "", "")
+call s:HL("Title",         s:gui0D, "", s:cterm0D, "", "none", "")
+call s:HL("Conceal",       s:gui0D, s:gui00, s:cterm0D, s:cterm00, "", "")
+call s:HL("Cursor",        s:gui00, s:gui05, s:cterm00, s:cterm05, "", "")
+call s:HL("NonText",       s:gui03, "", s:cterm03, "", "", "")
+call s:HL("Normal",        s:gui05, s:gui00, s:cterm05, s:cterm00, "", "")
+call s:HL("LineNr",        s:gui02, s:gui00, s:cterm02, s:cterm00, "", "")
+call s:HL("SignColumn",    s:gui03, s:gui00, s:cterm03, s:cterm00, "bold", "")
+call s:HL("StatusLine",    s:gui04, s:gui02, s:cterm04, s:cterm02, "none", "")
+call s:HL("StatusLineNC",  s:gui03, s:gui01, s:cterm03, s:cterm01, "none", "")
+call s:HL("VertSplit",     s:gui02, s:gui02, s:cterm02, s:cterm02, "none", "")
+call s:HL("ColorColumn",   "", s:gui01, "", s:cterm01, "none", "")
+call s:HL("CursorColumn",  "", s:gui01, "", s:cterm01, "none", "")
+call s:HL("CursorLine",    "", s:gui01, "", s:cterm01, "none", "")
+call s:HL("CursorLineNr",  s:gui0A, s:gui00, s:cterm0A, s:cterm00, "", "")
+call s:HL("PMenu",         s:gui04, s:gui01, s:cterm04, s:cterm01, "none", "")
+call s:HL("PMenuSel",      s:gui01, s:gui04, s:cterm01, s:cterm04, "", "")
+call s:HL("TabLine",       s:gui03, s:gui01, s:cterm03, s:cterm01, "none", "")
+call s:HL("TabLineFill",   s:gui03, s:gui01, s:cterm03, s:cterm01, "none", "")
+call s:HL("TabLineSel",    s:gui0B, s:gui01, s:cterm0B, s:cterm01, "none", "")
 
 " Standard syntax highlighting
-call <sid>hi("Boolean",      s:gui09, "", s:cterm09, "", "")
-call <sid>hi("Character",    s:gui08, "", s:cterm08, "", "")
-call <sid>hi("Comment",      s:gui03, "", s:cterm03, "", "")
-call <sid>hi("Conditional",  s:gui0E, "", s:cterm0E, "", "")
-call <sid>hi("Constant",     s:gui09, "", s:cterm09, "", "")
-call <sid>hi("Define",       s:gui0E, "", s:cterm0E, "", "none")
-call <sid>hi("Delimiter",    s:gui0F, "", s:cterm0F, "", "")
-call <sid>hi("Float",        s:gui09, "", s:cterm09, "", "")
-call <sid>hi("Function",     s:gui0D, "", s:cterm0D, "", "")
-call <sid>hi("Identifier",   s:gui08, "", s:cterm08, "", "none")
-call <sid>hi("Include",      s:gui0D, "", s:cterm0D, "", "")
-call <sid>hi("Keyword",      s:gui0E, "", s:cterm0E, "", "")
-call <sid>hi("Label",        s:gui0A, "", s:cterm0A, "", "")
-call <sid>hi("Number",       s:gui09, "", s:cterm09, "", "")
-call <sid>hi("Operator",     s:gui05, "", s:cterm05, "", "none")
-call <sid>hi("PreProc",      s:gui0A, "", s:cterm0A, "", "")
-call <sid>hi("Repeat",       s:gui0A, "", s:cterm0A, "", "")
-call <sid>hi("Special",      s:gui0C, "", s:cterm0C, "", "")
-call <sid>hi("SpecialChar",  s:gui0F, "", s:cterm0F, "", "")
-call <sid>hi("Statement",    s:gui08, "", s:cterm08, "", "")
-call <sid>hi("StorageClass", s:gui0A, "", s:cterm0A, "", "")
-call <sid>hi("String",       s:gui0B, "", s:cterm0B, "", "")
-call <sid>hi("Structure",    s:gui0E, "", s:cterm0E, "", "")
-call <sid>hi("Tag",          s:gui0A, "", s:cterm0A, "", "")
-call <sid>hi("Todo",         s:gui0A, s:gui01, s:cterm0A, s:cterm01, "")
-call <sid>hi("Type",         s:gui0A, "", s:cterm0A, "", "none")
-call <sid>hi("Typedef",      s:gui0A, "", s:cterm0A, "", "")
+call s:HL("Boolean",      s:gui09, "", s:cterm09, "", "", "")
+call s:HL("Character",    s:gui08, "", s:cterm08, "", "", "")
+call s:HL("Comment",      s:gui03, "", s:cterm03, "", "", "")
+call s:HL("Conditional",  s:gui0E, "", s:cterm0E, "", "", "")
+call s:HL("Constant",     s:gui09, "", s:cterm09, "", "", "")
+call s:HL("Define",       s:gui0E, "", s:cterm0E, "", "none", "")
+call s:HL("Delimiter",    s:gui0F, "", s:cterm0F, "", "", "")
+call s:HL("Float",        s:gui09, "", s:cterm09, "", "", "")
+call s:HL("Function",     s:gui0D, "", s:cterm0D, "", "", "")
+call s:HL("Identifier",   s:gui08, "", s:cterm08, "", "none", "")
+call s:HL("Include",      s:gui0D, "", s:cterm0D, "", "", "")
+call s:HL("Keyword",      s:gui0E, "", s:cterm0E, "", "", "")
+call s:HL("Label",        s:gui0A, "", s:cterm0A, "", "", "")
+call s:HL("Number",       s:gui09, "", s:cterm09, "", "", "")
+call s:HL("Operator",     s:gui05, "", s:cterm05, "", "none", "")
+call s:HL("PreProc",      s:gui0A, "", s:cterm0A, "", "", "")
+call s:HL("Repeat",       s:gui0A, "", s:cterm0A, "", "", "")
+call s:HL("Special",      s:gui0C, "", s:cterm0C, "", "", "")
+call s:HL("SpecialChar",  s:gui0F, "", s:cterm0F, "", "", "")
+call s:HL("Statement",    s:gui08, "", s:cterm08, "", "", "")
+call s:HL("StorageClass", s:gui0A, "", s:cterm0A, "", "", "")
+call s:HL("String",       s:gui0B, "", s:cterm0B, "", "", "")
+call s:HL("Structure",    s:gui0E, "", s:cterm0E, "", "", "")
+call s:HL("Tag",          s:gui0A, "", s:cterm0A, "", "", "")
+call s:HL("Todo",         s:gui0A, s:gui01, s:cterm0A, s:cterm01, "", "")
+call s:HL("Type",         s:gui0A, "", s:cterm0A, "", "none", "")
+call s:HL("Typedef",      s:gui0A, "", s:cterm0A, "", "", "")
 
 " C highlighting
-call <sid>hi("cOperator",   s:gui0C, "", s:cterm0C, "", "")
-call <sid>hi("cPreCondit",  s:gui0E, "", s:cterm0E, "", "")
+call s:HL("cOperator",   s:gui0C, "", s:cterm0C, "", "", "")
+call s:HL("cPreCondit",  s:gui0E, "", s:cterm0E, "", "", "")
+
+" C# highlighting
+call s:HL("csClass",                 s:gui0A, "", s:cterm0A, "", "", "")
+call s:HL("csAttribute",             s:gui0A, "", s:cterm0A, "", "", "")
+call s:HL("csModifier",              s:gui0E, "", s:cterm0E, "", "", "")
+call s:HL("csType",                  s:gui08, "", s:cterm08, "", "", "")
+call s:HL("csUnspecifiedStatement",  s:gui0D, "", s:cterm0D, "", "", "")
+call s:HL("csContextualStatement",   s:gui0E, "", s:cterm0E, "", "", "")
+call s:HL("csNewDecleration",        s:gui08, "", s:cterm08, "", "", "")
 
 " CSS highlighting
-call <sid>hi("cssBraces",      s:gui05, "", s:cterm05, "", "")
-call <sid>hi("cssClassName",   s:gui0E, "", s:cterm0E, "", "")
-call <sid>hi("cssColor",       s:gui0C, "", s:cterm0C, "", "")
+call s:HL("cssBraces",      s:gui05, "", s:cterm05, "", "", "")
+call s:HL("cssClassName",   s:gui0E, "", s:cterm0E, "", "", "")
+call s:HL("cssColor",       s:gui0C, "", s:cterm0C, "", "", "")
 
 " Diff highlighting
-call <sid>hi("DiffAdd",      s:gui0B, s:gui01,  s:cterm0B, s:cterm01, "")
-call <sid>hi("DiffChange",   s:gui03, s:gui01,  s:cterm03, s:cterm01, "")
-call <sid>hi("DiffDelete",   s:gui08, s:gui01,  s:cterm08, s:cterm01, "")
-call <sid>hi("DiffText",     s:gui0D, s:gui01,  s:cterm0D, s:cterm01, "")
-call <sid>hi("DiffAdded",    s:gui0B, s:gui00,  s:cterm0B, s:cterm00, "")
-call <sid>hi("DiffFile",     s:gui08, s:gui00,  s:cterm08, s:cterm00, "")
-call <sid>hi("DiffNewFile",  s:gui0B, s:gui00,  s:cterm0B, s:cterm00, "")
-call <sid>hi("DiffLine",     s:gui0D, s:gui00,  s:cterm0D, s:cterm00, "")
-call <sid>hi("DiffRemoved",  s:gui08, s:gui00,  s:cterm08, s:cterm00, "")
+call s:HL("DiffAdd",      s:gui0B, s:gui01,  s:cterm01, s:cterm0B, "bold", "")
+call s:HL("DiffChange",   s:gui03, s:gui01,  s:cterm01, s:cterm0A, "bold", "")
+call s:HL("DiffDelete",   s:gui08, s:gui01,  s:cterm01, s:cterm08, "bold", "")
+call s:HL("DiffText",     s:gui0D, s:gui01,  s:cterm0D, s:cterm01, "", "")
+call s:HL("DiffAdded",    s:gui0B, s:gui00,  s:cterm0B, s:cterm00, "", "")
+call s:HL("DiffFile",     s:gui08, s:gui00,  s:cterm08, s:cterm00, "", "")
+call s:HL("DiffNewFile",  s:gui0B, s:gui00,  s:cterm0B, s:cterm00, "", "")
+call s:HL("DiffLine",     s:gui0D, s:gui00,  s:cterm0D, s:cterm00, "", "")
+call s:HL("DiffRemoved",  s:gui08, s:gui00,  s:cterm08, s:cterm00, "", "")
 
 " Git highlighting
-call <sid>hi("gitCommitOverflow",  s:gui08, "", s:cterm08, "", "")
-call <sid>hi("gitCommitSummary",   s:gui0B, "", s:cterm0B, "", "")
-  
+call s:HL("gitCommitOverflow",  s:gui08, "", s:cterm08, "", "", "")
+call s:HL("gitCommitSummary",   s:gui0B, "", s:cterm0B, "", "", "")
+
 " GitGutter highlighting
-call <sid>hi("GitGutterAdd",     s:gui0B, s:gui01, s:cterm0B, s:cterm01, "")
-call <sid>hi("GitGutterChange",  s:gui0D, s:gui01, s:cterm0D, s:cterm01, "")
-call <sid>hi("GitGutterDelete",  s:gui08, s:gui01, s:cterm08, s:cterm01, "")
-call <sid>hi("GitGutterChangeDelete",  s:gui0E, s:gui01, s:cterm0E, s:cterm01, "")
+call s:HL("GitGutterAdd",     s:gui0B, s:gui01, s:cterm0B, s:cterm01, "", "")
+call s:HL("GitGutterChange",  s:gui0D, s:gui01, s:cterm0D, s:cterm01, "", "")
+call s:HL("GitGutterDelete",  s:gui08, s:gui01, s:cterm08, s:cterm01, "", "")
+call s:HL("GitGutterChangeDelete",  s:gui0E, s:gui01, s:cterm0E, s:cterm01, "", "")
 
 " HTML highlighting
-call <sid>hi("htmlBold",    s:gui0A, "", s:cterm0A, "", "")
-call <sid>hi("htmlItalic",  s:gui0E, "", s:cterm0E, "", "")
-call <sid>hi("htmlEndTag",  s:gui05, "", s:cterm05, "", "")
-call <sid>hi("htmlTag",     s:gui05, "", s:cterm05, "", "")
+call s:HL("htmlBold",    s:gui0A, "", s:cterm0A, "", "", "")
+call s:HL("htmlItalic",  s:gui0E, "", s:cterm0E, "", "", "")
+call s:HL("htmlEndTag",  s:gui05, "", s:cterm05, "", "", "")
+call s:HL("htmlTag",     s:gui05, "", s:cterm05, "", "", "")
 
 " JavaScript highlighting
-call <sid>hi("javaScript",        s:gui05, "", s:cterm05, "", "")
-call <sid>hi("javaScriptBraces",  s:gui05, "", s:cterm05, "", "")
-call <sid>hi("javaScriptNumber",  s:gui09, "", s:cterm09, "", "")
+call s:HL("javaScript",        s:gui05, "", s:cterm05, "", "", "")
+call s:HL("javaScriptBraces",  s:gui05, "", s:cterm05, "", "", "")
+call s:HL("javaScriptNumber",  s:gui09, "", s:cterm09, "", "", "")
+
+" Mail highlighting
+call s:HL("mailQuoted1",  s:gui0A, "", s:cterm0A, "", "", "")
+call s:HL("mailQuoted2",  s:gui0B, "", s:cterm0B, "", "", "")
+call s:HL("mailQuoted3",  s:gui0E, "", s:cterm0E, "", "", "")
+call s:HL("mailQuoted4",  s:gui0C, "", s:cterm0C, "", "", "")
+call s:HL("mailQuoted5",  s:gui0D, "", s:cterm0D, "", "", "")
+call s:HL("mailQuoted6",  s:gui0A, "", s:cterm0A, "", "", "")
+call s:HL("mailURL",      s:gui0D, "", s:cterm0D, "", "", "")
+call s:HL("mailEmail",    s:gui0D, "", s:cterm0D, "", "", "")
 
 " Markdown highlighting
-call <sid>hi("markdownCode",              s:gui0B, "", s:cterm0B, "", "")
-call <sid>hi("markdownError",             s:gui05, s:gui00, s:cterm05, s:cterm00, "")
-call <sid>hi("markdownCodeBlock",         s:gui0B, "", s:cterm0B, "", "")
-call <sid>hi("markdownHeadingDelimiter",  s:gui0D, "", s:cterm0D, "", "")
+call s:HL("markdownCode",              s:gui0B, "", s:cterm0B, "", "", "")
+call s:HL("markdownError",             s:gui05, s:gui00, s:cterm05, s:cterm00, "", "")
+call s:HL("markdownCodeBlock",         s:gui0B, "", s:cterm0B, "", "", "")
+call s:HL("markdownHeadingDelimiter",  s:gui0D, "", s:cterm0D, "", "", "")
 
 " NERDTree highlighting
-call <sid>hi("NERDTreeDirSlash",  s:gui0D, "", s:cterm0D, "", "")
-call <sid>hi("NERDTreeExecFile",  s:gui05, "", s:cterm05, "", "")
+call s:HL("NERDTreeDirSlash",  s:gui0D, "", s:cterm0D, "", "", "")
+call s:HL("NERDTreeExecFile",  s:gui05, "", s:cterm05, "", "", "")
 
 " PHP highlighting
-call <sid>hi("phpMemberSelector",  s:gui05, "", s:cterm05, "", "")
-call <sid>hi("phpComparison",      s:gui05, "", s:cterm05, "", "")
-call <sid>hi("phpParent",          s:gui05, "", s:cterm05, "", "")
+call s:HL("phpMemberSelector",  s:gui05, "", s:cterm05, "", "", "")
+call s:HL("phpComparison",      s:gui05, "", s:cterm05, "", "", "")
+call s:HL("phpParent",          s:gui05, "", s:cterm05, "", "", "")
 
 " Python highlighting
-call <sid>hi("pythonOperator",  s:gui0E, "", s:cterm0E, "", "")
-call <sid>hi("pythonRepeat",    s:gui0E, "", s:cterm0E, "", "")
+call s:HL("pythonOperator",   s:gui0E, "", s:cterm0E, "", "", "")
+call s:HL("pythonRepeat",     s:gui0A, "", s:cterm0A, "", "", "")
+call s:HL("pythonBuiltin",    s:gui0A, "", s:cterm0A, "", "", "")
+
+" Doxygen highlighting
+call s:HL("doxygenBrief",                s:gui0B, "", s:cterm0B, "", "", "")
+call s:HL("doxygenSpecialOnelineDesc",   s:gui0B, "", s:cterm0B, "", "", "")
+call s:HL("doxygenSpecialHeading",       s:gui0B, "", s:cterm0B, "", "", "")
+call s:HL("doxygenParamName",            s:gui08, "", s:cterm08, "", "", "")
+call s:HL("doxygenPrev",                 s:gui0B, "", s:cterm0B, "", "", "")
+call s:HL("doxygenComment",              s:gui0B, "", s:cterm0B, "", "", "")
 
 " Ruby highlighting
-call <sid>hi("rubyAttribute",               s:gui0D, "", s:cterm0D, "", "")
-call <sid>hi("rubyConstant",                s:gui0A, "", s:cterm0A, "", "")
-call <sid>hi("rubyInterpolation",           s:gui0B, "", s:cterm0B, "", "")
-call <sid>hi("rubyInterpolationDelimiter",  s:gui0F, "", s:cterm0F, "", "")
-call <sid>hi("rubyRegexp",                  s:gui0C, "", s:cterm0C, "", "")
-call <sid>hi("rubySymbol",                  s:gui0B, "", s:cterm0B, "", "")
-call <sid>hi("rubyStringDelimiter",         s:gui0B, "", s:cterm0B, "", "")
+call s:HL("rubyAttribute",               s:gui0D, "", s:cterm0D, "", "", "")
+call s:HL("rubyConstant",                s:gui0A, "", s:cterm0A, "", "", "")
+call s:HL("rubyInterpolation",           s:gui0B, "", s:cterm0B, "", "", "")
+call s:HL("rubyInterpolationDelimiter",  s:gui0F, "", s:cterm0F, "", "", "")
+call s:HL("rubyRegexp",                  s:gui0C, "", s:cterm0C, "", "", "")
+call s:HL("rubySymbol",                  s:gui0B, "", s:cterm0B, "", "", "")
+call s:HL("rubyStringDelimiter",         s:gui0B, "", s:cterm0B, "", "", "")
 
 " SASS highlighting
-call <sid>hi("sassidChar",     s:gui08, "", s:cterm08, "", "")
-call <sid>hi("sassClassChar",  s:gui09, "", s:cterm09, "", "")
-call <sid>hi("sassInclude",    s:gui0E, "", s:cterm0E, "", "")
-call <sid>hi("sassMixing",     s:gui0E, "", s:cterm0E, "", "")
-call <sid>hi("sassMixinName",  s:gui0D, "", s:cterm0D, "", "")
+call s:HL("sassidChar",     s:gui08, "", s:cterm08, "", "", "")
+call s:HL("sassClassChar",  s:gui09, "", s:cterm09, "", "", "")
+call s:HL("sassInclude",    s:gui0E, "", s:cterm0E, "", "", "")
+call s:HL("sassMixing",     s:gui0E, "", s:cterm0E, "", "", "")
+call s:HL("sassMixinName",  s:gui0D, "", s:cterm0D, "", "", "")
 
 " Signify highlighting
-call <sid>hi("SignifySignAdd",     s:gui0B, s:gui01, s:cterm0B, s:cterm01, "")
-call <sid>hi("SignifySignChange",  s:gui0D, s:gui01, s:cterm0D, s:cterm01, "")
-call <sid>hi("SignifySignDelete",  s:gui08, s:gui01, s:cterm08, s:cterm01, "")
+call s:HL("SignifySignAdd",     s:gui0B, s:gui00, s:cterm0B, s:cterm00, "bold", "")
+call s:HL("SignifySignChange",  s:gui0D, s:gui00, s:cterm0D, s:cterm00, "bold", "")
+call s:HL("SignifySignDelete",  s:gui08, s:gui00, s:cterm08, s:cterm00, "bold", "")
 
 " Spelling highlighting
-call <sid>hi("SpellBad",     "", s:gui00, "", s:cterm00, "undercurl")
-call <sid>hi("SpellLocal",   "", s:gui00, "", s:cterm00, "undercurl")
-call <sid>hi("SpellCap",     "", s:gui00, "", s:cterm00, "undercurl")
-call <sid>hi("SpellRare",    "", s:gui00, "", s:cterm00, "undercurl")
+call s:HL("SpellBad",     "", s:gui00, "", s:cterm00, "undercurl", s:gui08)
+call s:HL("SpellLocal",   "", s:gui00, "", s:cterm00, "undercurl", s:gui0C)
+call s:HL("SpellCap",     "", s:gui00, "", s:cterm00, "undercurl", s:gui0D)
+call s:HL("SpellRare",    "", s:gui00, "", s:cterm00, "undercurl", s:gui0E)
 
 " Remove functions
-delf <sid>hi
-delf <sid>gui
-delf <sid>cterm
+delf s:HL
+delf s:GUI
+delf s:CTERM
 
 " Remove color variables
 unlet s:gui00 s:gui01 s:gui02 s:gui03  s:gui04  s:gui05  s:gui06  s:gui07  s:gui08  s:gui09 s:gui0A  s:gui0B  s:gui0C  s:gui0D  s:gui0E  s:gui0F
