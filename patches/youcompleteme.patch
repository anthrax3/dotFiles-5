diff --git a/python/ycm/vimsupport.py b/python/ycm/vimsupport.py
index adb8505..cb2581c 100644
--- a/python/ycm/vimsupport.py
+++ b/python/ycm/vimsupport.py
@@ -408,44 +408,32 @@ def GetVimCommand( user_command, default = 'edit' ):
 
 # Both |line| and |column| need to be 1-based
 def JumpToLocation( filename, line, column ):
-  # Add an entry to the jumplist
-  vim.command( "normal! m'" )
+  # Using this instead of the tempfile module because Windows won't read
+  # from a file not yet written to disk
+  tmp_filename = vim.eval('tempname()')
+  # YCM doesn't retun the identifier on which it inferred the GoTo location
+  # so we guess that is the current word under the cursor
+  tagname = vim.eval( 'expand("<cword>")' )
+  content = '{0}\t{1}\t{2}'.format(tagname,
+      filename,
+      'call cursor({0}, {1})'.format(line, column))
 
-  if filename != GetCurrentBufferFilepath():
-    # We prefix the command with 'keepjumps' so that opening the file is not
-    # recorded in the jumplist. So when we open the file and move the cursor to
-    # a location in it, the user can use CTRL-O to jump back to the original
-    # location, not to the start of the newly opened file.
-    # Sadly this fails on random occasions and the undesired jump remains in the
-    # jumplist.
-    user_command = user_options_store.Value( 'goto_buffer_command' )
-
-    if user_command == 'new-or-existing-tab':
-      if TryJumpLocationInOpenedTab( filename, line, column ):
-        return
-      user_command = 'new-tab'
-
-    vim_command = GetVimCommand( user_command )
-    try:
-      vim.command( 'keepjumps {0} {1}'.format( vim_command,
-                                               EscapedFilepath( filename ) ) )
-    # When the file we are trying to jump to has a swap file
-    # Vim opens swap-exists-choices dialog and throws vim.error with E325 error,
-    # or KeyboardInterrupt after user selects one of the options.
-    except vim.error as e:
-      if 'E325' not in str( e ):
-        raise
-      # Do nothing if the target file is still not opened (user chose (Q)uit)
-      if filename != GetCurrentBufferFilepath():
-        return
-    # Thrown when user chooses (A)bort in .swp message box
-    except KeyboardInterrupt:
-      return
-  vim.current.window.cursor = ( line, column - 1 )
-
-  # Center the screen on the jumped-to location
-  vim.command( 'normal! zz' )
+  # write location to temporary tagfile
+  with open(tmp_filename, 'w') as f:
+    f.write(content)
 
+  # add temp tagfile, jump to our tag, restore tags file and delete temp file
+  old_tags = GetVariableValue('&tags')
+  old_wildignore = GetVariableValue('&wildignore')
+  try:
+    # Clear wildignore to ensure tag file isn't ignored
+    SetVariableValue('&wildignore', '')
+    SetVariableValue('&tags', tmp_filename)
+    vim.command('tjump %s' % tagname)
+  finally:
+    SetVariableValue('&tags', old_tags)
+    SetVariableValue('&wildignore', old_wildignore)
+  os.unlink(tmp_filename)
 
 def NumLinesInBuffer( buffer_object ):
   # This is actually less than obvious, that's why it's wrapped in a function
