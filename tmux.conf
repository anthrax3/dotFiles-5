# use C-a, since it's on the home row and easier to hit than C-b
unbind-key C-b
set -g prefix C-a

# utf8 is on
set -g utf8 on
set -g status-utf8 on

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# focus events enabled for terminals that support them
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# vi is good
setw -g mode-keys vi

# Start window numbering at 1 (default => 0)
set -g base-index 1

# mouse behavior
setw -g mode-mouse on
set -g mouse-utf8
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on

# use 256 colors
set -g default-terminal "screen-256color"

# Keep plenty of history for scrollback
set -g history-limit 50000

# tmux messages are displayed for 4 seconds
set -g display-time 4000

bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

# use vim-like keys for splits and windows
bind-key v split-window -h
bind-key s split-window -v
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# smart pane switching with awareness of vim splits
# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind C-l send-keys 'C-l'

bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key t next-window
bind-key T previous-window

bind-key [ copy-mode
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

set-option -g display-panes-time 1500

# Status Bar
set-option -g status-interval 1
set-option -g status-left ''
set-option -g status-right '%l:%M%p - #[fg=yellow]#(whoami)@#h'
set-window-option -g window-status-current-fg magenta
set-option -g status-fg default

# More elegant this way
set-option -g status-bg black
#set-option -g pane-active-border-fg colour14
#set-option -g pane-border-fg colour0

# # Status Bar solarized-light
# if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g status-bg white"
# if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-active-border-fg white"
# if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-border-fg white"

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on
set-option -g set-titles on

# pane border
set-option -g pane-border-fg colour12
set-option -g pane-active-border-fg colour1

# Enable native Mac OS X copy/paste
set-option -g default-command "reattach-to-user-namespace -l $SHELL"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# automatically renumber window numbers on closing a pane (tmux >= 1.7)
set -g renumber-windows on
